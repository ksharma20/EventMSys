swagger: "2.0"
info:
  description: "This is a sample API Docs for Event Managment System (eventMsys)"
  version: "1.0.0"
  title: "Event Managment System"
  # termsOfService: "http://swagger.io/terms/"
  contact:
    email: "keshav.sharma@yesavail.digital"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8000"
basePath: "/"
tags:
- name: "Event"
  description: "Everything about your Events"
- name: "Payments"
  description: "All about checkout, order and payments"
schemes:
- "http"
paths:
  /apis/events:
    get:
      tags:
      - "Event"
      summary: "Check Events"
      description: "Check the All avaialble events"
      operationId: "events"
      produces:
      - "application/json"
      parameters:
      - name: "format"
        in: "query"
        description: "To Get json format"
        required: true
        type: "string"
        # items:
        #   type: "json"
      responses:
        "200":
          description: "Successful operation"
          # schema:
          #   type: "array"
          #   items:
          #     $ref: "#/definitions/Pet"
        "400":
          description: "Invalid status value"
      
  /apis/event/{eventPK}:
    get:
      tags:
      - "Event"
      summary: "Get the Date of particular Event"
      description: "Returns a Dates registered for that Event"
      operationId: "geteventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventPK"
        in: "path"
        description: "ID of Event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          # schema:
          #   $ref: "#/definitions/Pet"
        "400":
          description: "Invalid ID supplied"
      # security:
      # - api_key: []
    
  /payment/checkout:
    post:
      tags:
      - "Payments"
      summary: "Send data to create Order"
      description: ""
      operationId: "createorder"
      # consumes:
      # - "multipart/form-data"
      produces:
      - "application/json"
      
      responses:
        "200":
          description: "successful operation"
          # schema:
          #   $ref: "#/definitions/ApiResponse"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
      
  /payment/checkin:
    post:
      tags:
      - "Payments"
      summary: "Send data to Mark Order paid or Not paid"
      description: ""
      operationId: "updateorder"
      # consumes:
      # - "multipart/form-data"
      produces:
      - "application/json"
      
      responses:
        "200":
          description: "successful operation"
          # schema:
          #   $ref: "#/definitions/ApiResponse"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
